version: '3.8'

services:
  # Инициализация базы данных
#  init-db:
#    image: python:3.11-alpine
#    container_name: db-init
#    volumes:
#      - ./initdb:/initdb  # Монтируем папку с скриптами инициализации
#    working_dir: /initdb  # Рабочая директория внутри контейнера
#    entrypoint: ["python", "generate_sql.py"]  # Запуск скрипта генерации SQL
#    networks:
#      - app-network

  # База данных PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb/scripts_python:/docker-entrypoint-initdb.d  # Монтируем SQL-скрипты для инициализации
    networks:
      - app-network
#    depends_on:
#      init-db:
#        condition: service_completed_successfully  # Ждем завершения инициализации

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres

  # Spring Boot приложение
  app:
    image: larinaaa1/myproject
    container_name: spring-boot-app
    restart: always
    depends_on:
      - postgres  # Зависимость от базы данныхsc
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase  # URL базы данных
      SPRING_DATASOURCE_USERNAME: admin  # Имя пользователя
      SPRING_DATASOURCE_PASSWORD: admin  # Пароль
      SPRING_JPA_HIBERNATE_DDL_AUTO: update  # Автоматическое обновление схемы базы данных
      SPRING_JPA_SHOW_SQL: 'false'  # отключаем логи Hibernate
      SERVER_TOMCAT_MAX_THREADS: '200'
    ports:
      - "8080:8080"  # Проброс порта приложения
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'  # лимиты для CPU
          memory: 512M  # лимиты для памяти
        reservations:
          cpus: '0.5'  # Резервирование CPU
          memory: 256M  # Резервирование памяти


# Сеть для связи между контейнерами
networks:
  app-network:
    driver: bridge

# Том для хранения данных PostgreSQL
volumes:
  postgres_data:
  pgadmin_data: